/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.billingManager;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import modelBillingEnterpriseDAO.PrescriptionBillingDAO;
import modelBillingEnterpriseService.PrescriptionBillingService;

import modelPharmacyEnterprise.Prescription;
import modelPharmacyEnterpriseDAO.PrescriptionDAO;
import modelPharmacyEnterpriseService.PrescriptionService;


/**
 *
 * @author keerthichandrakanth
 */
public class prescriptionBilling extends javax.swing.JPanel {
    JPanel mainWorkArea;

    /**
     * Creates new form prescriptionBilling
     */
    public prescriptionBilling(JPanel mainWorkArea) {
        this.mainWorkArea = mainWorkArea;
        initComponents();
        populateTblBilllingDetailsDisplay("All");
    }
    
    private void populateTblBilllingDetailsDisplay(String filterStatus) {
    // Define the column names
    String[] columnNames = {
        "Prescription ID", 
        "Medicine Name", 
        "Medicine Price", 
        "Medicine Quantity", 
        "Total Per Medicine", 
        "Total Prescription Amount",
        "Payment Status"    
    };

    // Retrieve the table model from the JTable
    DefaultTableModel model = (DefaultTableModel) tblBilllingDetailsDisplay.getModel();

    // Set the column names to the table model
    model.setColumnIdentifiers(columnNames);

    // Clear existing rows
    model.setRowCount(0);

    // Initialize DAO and Service
    PrescriptionBillingDAO billingDAO = new PrescriptionBillingDAO();
    PrescriptionBillingService billingService = new PrescriptionBillingService(billingDAO);

    try {
        // Fetch data from the Service layer (or directly from DAO)
        List<Object[]> billingSummary = billingService.fetchBillingSummary();

        // Filter billing records based on the selected payment status
        List<Object[]> filteredBillingSummary = new ArrayList<>();

        // If "All" is selected, show all rows; otherwise filter by status
        for (Object[] row : billingSummary) {
            String paymentStatus = (String) row[6];  // Assuming Payment Status is the 7th element (index 6)

            // Filter by payment status or show all if "All" is selected
            if ("All".equals(filterStatus) || filterStatus.equals(paymentStatus)) {
                filteredBillingSummary.add(row);
            }
        }

        // Add the filtered rows to the table model
        for (Object[] row : filteredBillingSummary) {
            model.addRow(row);  // Add each row (Object[]) to the table
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error fetching data: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
}

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbFilteronStatus = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBilllingDetailsDisplay = new javax.swing.JTable();

        setBackground(new java.awt.Color(247, 249, 252));

        cmbFilteronStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Payment Pending", "Paid" }));
        cmbFilteronStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFilteronStatusActionPerformed(evt);
            }
        });

        tblBilllingDetailsDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        jScrollPane1.setViewportView(tblBilllingDetailsDisplay);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cmbFilteronStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(cmbFilteronStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbFilteronStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFilteronStatusActionPerformed
        // TODO add your handling code here:
        String selectedStatus = (String) cmbFilteronStatus.getSelectedItem();
        populateTblBilllingDetailsDisplay(selectedStatus);
    }//GEN-LAST:event_cmbFilteronStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbFilteronStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBilllingDetailsDisplay;
    // End of variables declaration//GEN-END:variables
}
