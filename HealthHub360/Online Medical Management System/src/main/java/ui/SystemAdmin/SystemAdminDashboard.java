/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.SystemAdmin;

import java.awt.CardLayout;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import modelDAO.UserDAO;
import ui.DatabaseUtil;
import ui.LoginScreen;

/**
 *
 * @author keerthichandrakanth
 */
public class SystemAdminDashboard extends javax.swing.JPanel {

        private UserDAO userDAO;

    /**
     * Creates new form systemAdminWorkarea
     */
        
    public SystemAdminDashboard(Connection connection) {
        this.userDAO = new UserDAO(connection);
        initComponents();
        populateTable();
    }

    private void populateTable() {
        try {
            List<Map<String, Object>> admins = userDAO.getEnterpriseAdmins();
            String[] columns = {"ID", "Name", "Role", "Email", "Contact", "Address"};
            Object[][] data = admins.stream().map(admin -> new Object[]{
                admin.get("ID"),
                admin.get("Name"),
                admin.get("Role"),
                admin.get("Email"),
                admin.get("Contact"),
                admin.get("Address")
            }).toArray(Object[][]::new);

            TblEnterpriseAdmin.setModel(new DefaultTableModel(data, columns));
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading Enterprise Admins: " + e.getMessage());
        }
    }

    public JTable getTblEnterpriseAdmins() {
        return TblEnterpriseAdmin;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblEnterpriseAdmin = new javax.swing.JTable();
        BtnLogOut2 = new javax.swing.JButton();
        BtnCreateUser = new javax.swing.JButton();
        BtnUpdateUser = new javax.swing.JButton();
        BtnView = new javax.swing.JButton();
        BtnDeleteUser = new javax.swing.JButton();

        setBackground(new java.awt.Color(247, 249, 252));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("System Admin");

        TblEnterpriseAdmin.setBackground(new java.awt.Color(187, 208, 237));
        TblEnterpriseAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "User ID", "Name", "Role", "Email", "Contact", "Address"
            }
        ));
        jScrollPane1.setViewportView(TblEnterpriseAdmin);

        BtnLogOut2.setBackground(new java.awt.Color(199, 180, 127));
        BtnLogOut2.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        BtnLogOut2.setText("<- Log Out");
        BtnLogOut2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogOut2ActionPerformed(evt);
            }
        });

        BtnCreateUser.setText("Create User");
        BtnCreateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCreateUserActionPerformed(evt);
            }
        });

        BtnUpdateUser.setText("Update User");
        BtnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUpdateUserActionPerformed(evt);
            }
        });

        BtnView.setText("View Details");
        BtnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnViewActionPerformed(evt);
            }
        });

        BtnDeleteUser.setText("Delete user");
        BtnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(BtnLogOut2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(279, 279, 279))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnCreateUser)
                .addGap(18, 18, 18)
                .addComponent(BtnUpdateUser)
                .addGap(18, 18, 18)
                .addComponent(BtnView)
                .addGap(18, 18, 18)
                .addComponent(BtnDeleteUser)
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnLogOut2))
                .addGap(65, 65, 65)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnCreateUser)
                    .addComponent(BtnUpdateUser)
                    .addComponent(BtnView)
                    .addComponent(BtnDeleteUser))
                .addContainerGap(92, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnLogOut2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogOut2ActionPerformed
        try {
            DatabaseUtil.closeConnection();
            JOptionPane.showMessageDialog(this, "Logged out successfully!");

            JPanel mainPanel = (JPanel) this.getParent();
            CardLayout layout = (CardLayout) mainPanel.getLayout();
            mainPanel.add(new LoginScreen(mainPanel), "LoginScreen");
            layout.show(mainPanel, "LoginScreen");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error while logging out: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnLogOut2ActionPerformed

    private void BtnCreateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCreateUserActionPerformed
        try {
            List<Map<String, Object>> admins = userDAO.getEnterpriseAdmins();
            if (!admins.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "An Enterprise Admin already exists. Please delete the existing one before creating a new one.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            AddUserDialog dialog = new AddUserDialog((Frame) SwingUtilities.getWindowAncestor(this), true, userDAO);
            dialog.setVisible(true);
            if (dialog.isSuccess()) {
                populateTable();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error while adding Enterprise Admin: " + e.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnCreateUserActionPerformed

    private void BtnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUpdateUserActionPerformed
            int selectedRow = TblEnterpriseAdmin.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select an admin to update.");
                return;
            }

            int userId = (int) TblEnterpriseAdmin.getValueAt(selectedRow, 0);
            String name = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 1);
            String roleName = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 2);
            String email = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 3);
            String contact = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 4);
            String address = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 5);

            // UpdateUserDialog can be reused; you may disable changing the role and email if desired
            UpdateUserDialog dialog = new UpdateUserDialog(
                    (Frame) SwingUtilities.getWindowAncestor(this),
                    true,
                    userDAO,
                    userId,
                    name,
                    contact,
                    email,
                    address,
                    roleName
            );
            dialog.setVisible(true);
            if (dialog.isSuccess()) {
                populateTable();
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnUpdateUserActionPerformed

    private void BtnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnViewActionPerformed
            int selectedRow = TblEnterpriseAdmin.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select an admin to view details.");
                return;
            }

            int userId = (int) TblEnterpriseAdmin.getValueAt(selectedRow, 0);
            String name = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 1);
            String roleName = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 2);
            String email = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 3);
            String contact = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 4);
            String address = (String) TblEnterpriseAdmin.getValueAt(selectedRow, 5);

            String message = "User ID: " + userId +
                             "\nName: " + name +
                             "\nRole: " + roleName +
                             "\nEmail: " + email +
                             "\nContact: " + contact +
                             "\nAddress: " + address;

            JOptionPane.showMessageDialog(this, message, "Enterprise Admin Details", JOptionPane.INFORMATION_MESSAGE);
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnViewActionPerformed

    private void BtnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteUserActionPerformed
            int selectedRow = TblEnterpriseAdmin.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select an admin to delete.");
                return;
            }
            int userId = (int) TblEnterpriseAdmin.getValueAt(selectedRow, 0);
            try {
                if (userDAO.deactivateUser(userId)) {
                    JOptionPane.showMessageDialog(this, "Admin deactivated successfully!");
                    populateTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to deactivate admin.");
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error deactivating admin: " + e.getMessage());
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnDeleteUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCreateUser;
    private javax.swing.JButton BtnDeleteUser;
    private javax.swing.JButton BtnLogOut2;
    private javax.swing.JButton BtnUpdateUser;
    private javax.swing.JButton BtnView;
    private javax.swing.JTable TblEnterpriseAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
