/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.User;
import modelDAO.RoleDAO;
import modelDAO.UserDAO;
import modelDAO.UserService;
import ui.Doctor.doctorDashboard;
import ui.Patient.patientDashboardPanel;
import ui.SystemAdmin.SystemAdminDashboard;
import ui.DatabaseUtil;
import ui.SystemAdmin.SystemAdminDashboard;
import ui.billingManager.billingManagerWorkarea;
import ui.enterpriseAdmin.EnterpriseAdminDashboard;
import ui.insuranceManager.insuranceManagerDashboard;
import ui.labManager.labManagerDashboard;
import ui.labTechnician.LabTechnicianDashboard;
import ui.pharmacist.pharmacistWorkarea;
import ui.pharmacyManager.pharmacyManagerWorkarea;

/**
 *
 * @author keerthichandrakanth
 */
public class LoginScreen extends javax.swing.JPanel {

      JPanel mainWorkArea;
      
    /**
     * Creates new form LoginScreen
     */
    public LoginScreen(JPanel mainWorkArea) {
        initComponents();
        this.mainWorkArea = mainWorkArea;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLogin = new javax.swing.JLabel();
        cmbRoles = new javax.swing.JComboBox<>();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPassword = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(247, 249, 252));

        titleLogin.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        titleLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLogin.setText("Login");

        cmbRoles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "System Admin", "Enterprise Admin", "Doctor", "Patient", "Lab Manager", "Lab Technician", "Pharmacy Manager", "Pharmacist", "Insurance Manager", "Billing Manager" }));
        cmbRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRolesActionPerformed(evt);
            }
        });

        lblUsername.setText("Username");

        lblPassword.setText("Password");

        btnLogin.setText("Login ");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUsername)
                    .addComponent(lblPassword))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUsername)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(343, 343, 343))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(397, 397, 397)
                        .addComponent(cmbRoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(titleLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addComponent(btnLogin)
                        .addGap(31, 31, 31)
                        .addComponent(btnCancel)))
                .addGap(230, 230, 230))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(titleLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(cmbRoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnCancel))
                .addContainerGap(243, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRolesActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbRolesActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed

     
        try{
         // Step 1: Establish the database connection
        Connection connection = DatabaseUtil.getConnection();
        
        // Step 2: Create DAO instances
        UserDAO userDAO = new UserDAO(connection);
        RoleDAO roleDAO = new RoleDAO(connection);
        
        // Step 3: Create the UserService instance
        UserService userService = new UserService(userDAO, roleDAO);
        
        // Step 4: Get the login credentials from the UI
        String selectedRole = cmbRoles.getSelectedItem().toString();
        String username = txtUsername.getText().trim();
        String password = new String(jPassword.getPassword()).trim();
         // Step 5: Validate inputs
        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter both username and password!", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        } 
         
          // Step 6: Authenticate the user
        User user = userService.authenticateUser(username, password, selectedRole);
        if (user != null) {
            UserService.setLoggedInUser(user);
            redirectToWorkArea(selectedRole, user, connection);  // Redirect based on role
        } else {
            JOptionPane.showMessageDialog(this, "Invalid credentials or role!", "Login Failed", JOptionPane.ERROR_MESSAGE);
        }
        
    }catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }finally {
        // Step 7: Close the database connection
        }
    }//GEN-LAST:event_btnLoginActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLogin;
    private javax.swing.JComboBox<String> cmbRoles;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel titleLogin;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables



    private void redirectToWorkArea(String role, User user, Connection connection) throws SQLException {

        CardLayout layout = (CardLayout) mainWorkArea.getLayout();
        User currentUser = UserService.getLoggedInUser();

        switch (role) {
            case "System Admin":
                mainWorkArea.add(new SystemAdminDashboard(connection), "AdminPanel");
                layout.show(mainWorkArea, "AdminPanel");
                break;
            case "Enterprise Admin":
                mainWorkArea.add(new EnterpriseAdminDashboard(connection), "EnterpriseAdminPanel");
                layout.show(mainWorkArea, "EnterpriseAdminPanel");
            break;
            case "Doctor":
                mainWorkArea.add(new doctorDashboard(user.getId(), connection), "doctorDashboard");
                layout.show(mainWorkArea, "doctorDashboard");
            break;
            case "Patient":
                mainWorkArea.add(new patientDashboardPanel(user.getId(), connection), "PatientPanel");
                layout.show(mainWorkArea, "PatientPanel");
                break;
            case "Lab Manager":
                mainWorkArea.add(new labManagerDashboard(user.getId(), connection), "labManagerDashboard");
                layout.show(mainWorkArea, "labManagerDashboard");
                break;
            case "Lab Technician":
                mainWorkArea.add(new LabTechnicianDashboard(user.getId(), connection), "labTechnicianDashboard");
                layout.show(mainWorkArea, "labTechnicianDashboard");
                break;

              case "Pharmacy Manager":
              mainWorkArea.add(new pharmacyManagerWorkarea(currentUser), "PharmacyPanel");
              layout.show(mainWorkArea, "PharmacyPanel");
               break;
            case "Pharmacist":
            mainWorkArea.add(new pharmacistWorkarea(currentUser), "PharmacyPanel");
            layout.show(mainWorkArea, "PharmacyPanel");
            break;

            case "Insurance Manager":
                mainWorkArea.add(new insuranceManagerDashboard(user.getId(), connection), "insuranceManagerDashboard");
                layout.show(mainWorkArea, "insuranceManagerDashboard");
                break;
            case "Billing Manager":
                mainWorkArea.add(new billingManagerWorkarea(currentUser), "InsurancePanel");
                layout.show(mainWorkArea, "InsurancePanel");
                break;
            default:
                JOptionPane.showMessageDialog(this, "Unknown role!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
        }            

    }
}
